use anyhow::Result;
use log::debug;
use test_engine::{
    from_main,
    refs::Weak,
    ui::{view, HasText, Label, ViewData, ViewSetup, UI},
    ui_test::check_colors,
};

#[view]
struct MultilineTestView {
    #[init]
    label: Label,
}

impl ViewSetup for MultilineTestView {
    fn setup(mut self: Weak<Self>) {
        self.label.place().all_sides(100);
        self.label.set_text_size(64);
        self.label
            .set_text("|       Plati mne dengi bistrenko pliz.\nJa kuplu dengushki.\nA");
    }
}

pub async fn test_multiline() -> Result<()> {
    let mut view = UI::init_test_view::<MultilineTestView>().await;

    check_colors(
        r#"
             160  289 - 255 255 255
             174  285 -   0   0   0
             181  301 - 255 255 255
             272  301 - 255 255 255
             334  293 -   1   1   1
             352  291 - 255 255 255
             375  290 -  35  35  35
             395  290 - 139 139 139
             411  290 -  67  67  67
             426  290 -   0   0   0
             441  290 - 255 255 255
             440  291 - 255 255 255
             413  297 - 255 255 255
             386  299 -   1   1   1
             349  302 - 255 255 255
             358  344 - 255 255 255
             376  320 - 255 255 255
             376  313 -   2   2   2
             376  308 - 255 255 255
             378  286 -   1   1   1
             378  279 - 255 255 255
             346  254 - 255 255 255
             330  282 - 255 255 255
             320  293 -   1   1   1
             309  327 - 255 255 255
             309  381 - 255 255 255
             340  408 - 255 255 255
             450  291 - 255 255 255
             426  288 -   0   0   0
             425  288 -   0   0   0
             405  288 - 152 152 152
             372  288 -   1   1   1
             347  288 - 131 131 131
             340  288 - 237 237 237
             315  306 -   1   1   1
             282  322 - 255 255 255
             350  299 - 255 255 255
             420  298 - 255 255 255
             426  298 -   0   0   0
             450  295 - 255 255 255
             472  295 - 255 255 255
             293  441 - 255 255 255
             193  404 - 255 255 255
             387  402 - 255 255 255
             263  382 - 255 255 255
             224  132 - 255 255 255
             135  182 - 255 255 255
             256  182 - 255 255 255
             354  182 - 255 255 255
             410  185 - 255 255 255
        "#,
    )
    .await?;

    from_main(move || {
        view.label.multiline = true;
    })
    .await;

    check_colors(
        r#"
             159  136 - 255 255 255
             176  131 -   0   0   0
             231  131 - 255 255 255
             337  130 - 255 255 255
             261  130 - 255 255 255
             338  130 - 255 255 255
             378  130 - 255 255 255
             383  130 - 255 255 255
             384  177 - 255 255 255
             295  366 - 255 255 255
             238  416 - 255 255 255
             229  410 - 255 255 255
             299  428 - 255 255 255
             299  458 - 119 119 119
             310  458 -   0   0   0
             311  458 -   0   0   0
             380  458 - 255 255 255
             406  458 - 255 255 255
             176  451 - 255 255 255
             175  450 - 255 255 255
             181  436 - 255 255 255
             183  420 - 255 255 255
             191  398 - 167 167 167
             208  390 -   1   1   1
             225  374 - 255 255 255
             229  369 - 255 255 255
             238  360 - 255 255 255
             299  317 - 255 255 255
             301  315 - 255 255 255
             339  288 - 255 255 255
             344  287 - 255 255 255
             347  275 - 255 255 255
             452  272 - 255 255 255
             452  272 - 255 255 255
             458  272 -   0   0   0
             444  272 - 255 255 255
             291  266 -   1   1   1
             286  266 - 140 140 140
             283  266 - 255 255 255
             233  266 -   0   0   0
              94  243 -  25  51  76
             143  256 - 255 255 255
             144  257 -  19  19  19
             281  198 - 255 255 255
             132  210 - 255 255 255
             136  209 - 255 255 255
             442  205 -   0   0   0
             448  221 - 255 255 255
             423  247 -   0   0   0
             416  250 - 255 255 255
             303  336 -   0   0   0
             297  352 - 255 255 255
             176  390 -  95  95  95
             176  387 -  95  95  95
             182  377 - 255 255 255
             297  238 - 255 255 255
             297  236 - 255 255 255
             342  164 - 255 255 255
             343  160 - 255 255 255
             343  160 - 255 255 255
        "#,
    )
    .await?;

    debug!("Multiline test: OK");

    Ok(())
}
