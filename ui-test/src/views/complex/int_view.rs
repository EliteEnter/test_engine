use anyhow::Result;
use log::debug;
use test_engine::{
    from_main,
    refs::Weak,
    ui::{view, IntView, Sub, ViewData, ViewSetup, UI},
    ui_test::inject_touches,
    App,
};

#[view]
struct IntTestView {
    int: Sub<IntView>,
}

impl ViewSetup for IntTestView {
    fn setup(self: Weak<Self>) {
        self.int.place().size(50, 150).center();
    }
}

pub async fn test_int_view() -> Result<()> {
    let mut view = UI::init_test_view::<IntTestView>().await;

    App::set_window_size((400, 400)).await;

    assert_eq!(1.0, view.int.value());

    inject_touches(
        "
            197  211  b
            197  210  e
            197  210  b
            197  210  e
            197  210  b
            197  210  e
            197  210  b
            197  210  e
            197  209  b
            197  209  e
            197  209  b
            197  209  e
            211  242  b
            211  242  e
            211  242  b
            211  242  e
            210  242  b
            206  243  e
            204  244  b
            204  244  e
            203  244  b
            203  244  e
            203  244  b
            204  244  e
            248  253  b
            251  253  e
            311  233  b
            310  232  e
            284  207  b
            273  184  e
            269  160  b
            266  157  e
            254  150  b
            187  161  e
            147  149  b
            91   160  e
            85   172  b
            86   198  e
            96   222  b
            116  233  e
            132  238  b
            136  244  e
            148  250  b
            160  252  e
            181  245  b
            187  246  e
            197  244  b
            202  241  e
            213  231  b
            206  211  e
            205  196  b
            204  193  e
            202  190  b
            202  190  e
            200  191  b
            165  200  e
            124  188  b
            124  188  e
            140  220  b
            152  240  e
            178  269  b
            190  282  e
            214  273  b
            210  268  e
            199  258  b
            197  216  e
            202  185  b
            205  170  e
            204  141  b
            202  103  e
            200  38   b
            233  73   e
            288  176  b
            307  215  e
            269  241  b
            231  265  e
            201  282  b
            185  290  e
            154  274  b
            167  221  e
            173  205  b
            199  189  e
            202  188  b
            216  198  e
            223  209  b
            218  224  e
            210  221  b
            207  218  e
            205  213  b
            206  214  e
            226  251  b
            219  249  e
            213  248  b
            213  248  e
            212  250  b
            211  253  e
            206  258  b
            205  262  e
            202  262  b
            201  262  e
            198  261  b
            198  261  e
            198  260  b
            198  260  e
            198  260  b
            198  260  e
            198  260  b
            198  260  e
            198  258  b
            198  258  e
            198  258  b
            198  258  e
            198  208  b
            198  208  e
            198  208  b
            198  208  e
            198  208  b
            198  206  e
            198  195  b
            198  195  e
            198  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  195  b
            199  195  e
            199  254  b
            199  254  e
            200  195  b
            200  195  e

        ",
    )
    .await;

    assert_eq!(20.0, view.int.value());

    from_main(move || {
        view.int.set_step(4.5);
    })
    .await;

    inject_touches(
        r#"
        217.51563    267.8711     b
        193.09766    247.10156    e
        206.96484    234.54297    b
        193.39063    258.7539     e
        203.41016    199.65625    b
        192.01172    191.97266    e
        190.83594    258.30078    b
        216.72656    228.10156    e
        216.98438    260.84766    b
        186.09766    240.3125     e
        216.98438    260.84766    b
        186.09766    240.3125     e
        216.98438    260.84766    b
        186.09766    240.3125     e
        216.98438    260.84766    b
        186.09766    240.3125     e
        216.98438    260.84766    b
        186.09766    240.3125     e
        216.98438    260.84766    b
        186.09766    240.3125     e
        216.98438    260.84766    b
        186.09766    240.3125     e
        216.98438    260.84766    b
        186.09766    240.3125     e
        "#,
    )
    .await;

    assert_eq!(-25.0, view.int.value());

    debug!("Int view test: OK");

    Ok(())
}
