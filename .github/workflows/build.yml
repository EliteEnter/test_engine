name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:

  #  build:
  #    strategy:
  #      fail-fast: false
  #      matrix:
  #        target: [
  #          { runner: mac, os: macos },
  #          { runner: ubuntu-latest, os: linux },
  #          { runner: windows-latest, os: windows },
  #          #          { runner: pi, os: raspberry },
  #
  #          { runner: mac, os: ios },
  #          #          { runner: ubuntu-latest, os: android }
  #        ]
  #    runs-on: ${{ matrix.target.runner }}
  #    steps:
  #      - uses: actions/checkout@v4
  #        with:
  #          token: ${{secrets.GITHUB_TOKEN}}
  #          submodules: recursive
  #
  #      - name: Build
  #        if: ${{ matrix.target.os != 'windows' }}
  #        run: ./build/build.sh ${{ matrix.target.os }}
  #
  #      - name: Build windows
  #        if: ${{ matrix.target.os == 'windows' }}
  #        run: py build/build.py
  #
  #      - name: Test
  #        if: ${{ matrix.target.os != 'ios' && matrix.target.os != 'android' }}
  #        run: make test

  linux:
    strategy:
      fail-fast: false
      matrix:
        target: [
          { container: "ubuntu:22.04" },
          { container: "ubuntu:23.10" },
          { container: "debian:10" },
          { container: "debian:11" },
          { container: "debian:12" },
        ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          submodules: recursive

      - name: Build
        run: echo ${{ matrix.container }} && ./build/in_docker.sh ${{ matrix.container }}

#      - name: Test
#        if: ${{ matrix.target.os != 'ios' && matrix.target.os != 'android' }}
#        run: make test
